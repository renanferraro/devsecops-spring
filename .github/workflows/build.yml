name: Build
on:
  push:
    branches:
      - develop
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
  test:
    name: OWASP ZAP Full Scan
    uses: zaproxy/action-full-scan@v0.3.0
    with:
      # GitHub Token to create issues in the repository
      #token: # optional, default is ${{ github.token }}
      # Target URL
      target: https://google.com
      # Relative path of the ZAP configuration file
      #rules_file_name: # optional
      # The Docker file to be executed
      docker_name: owasp/zap2docker-stable
      # Additional command line options
      #cmd_options: # optional
      # The title for the GitHub issue to be created
      #issue_title: # optional, default is ZAP Full Scan Report
    # The action status will be set to fail if ZAP identifies any alerts during the full scan
    fail_action: # optional
    # Whether Github issues should be created or not
    allow_issue_writing: # optional, default is true
  
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=renanferraro_devsecops-spring
